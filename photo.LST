C51 COMPILER V9.00   PHOTO                                                                 06/13/2013 19:58:54 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PHOTO
OBJECT MODULE PLACED IN photo.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE photo.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <head.h>
   2          
   3          
   4          //-------------------- photo-----------------
   5          void page_photo()
   6          {       int i,k,l;//i用来计数照片，k，l双层循环控制背景灯光     
   7   1              Enable_area(2);    //使能组为2
   8   1              
   9   1              Display_BMP(0,0,35);    //背景
  10   1              Time_delay(200);
  11   1              
  12   1              //Display_BMP_default(0,0,6);//64*64
  13   1      
  14   1              Display_BMP_default(260,210,14); //go back pic
  15   1      
  16   1              Set_area(20,260,210,320,240,2,3); //back按键区域触摸
  17   1              //void Set_area(unsigned char key_value, unsigned int X1, unsigned int Y1,
  18   1              //                              unsigned int X2, unsigned int Y2, unsigned char group, unsigned char type)
  19   1      
  20   1      
  21   1      
  22   1      
  23   1              //set_area_roll(1,1,319,239);
  24   1      
  25   1              //endautoroll(1);////停止并置为图片的初始状态
  26   1      
  27   1              set_area_roll(1,1,319,239);
  28   1              //void set_area_roll(int X1,int Y1,int X2,int Y2)       
  29   1              //设定滚动的区域
  30   1      
  31   1              autoroll(5,1,0,0);
  32   1              //自动滚屏
  33   1              //void  autoroll (unsigned char time,unsigned char step,
  34   1              //                              unsigned char direction,unsigned char reverse)
  35   1              
  36   1              
  37   1              
  38   1              Time_delay(200);
  39   1      
  40   1              for(i=37;i<=40;i++)
  41   1              {
  42   2                      for(k=200;k>=0;k--)       //渐暗
  43   2                      {
  44   3                              set_backlight(k);
  45   3                      //      for(l=0;l<=500-k;l++);
  46   3      
  47   3                      }
  48   2                      
  49   2                      Time_delay(200);
  50   2                      Display_BMP(0,0,i);
  51   2              
  52   2                      for(k=0;k<=200;k++)
  53   2                      {       
  54   3                              set_backlight(k);
  55   3                              for(l=0;l<=700-k;l++);//渐亮，停留，越暗停留的时间越长
C51 COMPILER V9.00   PHOTO                                                                 06/13/2013 19:58:54 PAGE 2   

  56   3                              
  57   3                      }
  58   2                      
  59   2                      Time_delay(300);
  60   2              
  61   2              }
  62   1              for(k=200;k>=0;k--)
  63   1                      {
  64   2                              set_backlight(k);
  65   2                      }
  66   1              
  67   1              endautoroll(0);
  68   1              Display_BMP(0,0,35);    //背景
  69   1              
  70   1              for(k=0;k<=200;k++)
  71   1                      {       
  72   2                              set_backlight(k);
  73   2                              for(l=0;l<=700-k;l++);//停留，越暗停留的时间越长
  74   2                              
  75   2                      }
  76   1              //Time_delay(50);
  77   1      
  78   1              page_home();
  79   1      
  80   1      }
  81          
  82          
  83          
  84          
  85          void LCD_Key20()  //back button
  86          {       
  87   1              if(Receive_Memory[2]==1)//释放
  88   1              {
  89   2                      endautoroll(0);//停止并置为图片的初始状态
  90   2                      page_home();
  91   2              }
  92   1                      //if (Receive_Memory[2]==2)//按下
  93   1                      //{
  94   1                              //Display_BMP(0,0,7);
  95   1                      //}
  96   1      }
  97          
  98          
  99          
 100          void set_area_roll(unsigned int X1,unsigned int Y1,
 101                                                  unsigned int X2,unsigned int Y2)        
 102          //设定滚动的区域
 103          {
 104   1                      Send_Check = 0;                         //将校验值先清零
 105   1                      
 106   1                      UART_SendPacked_S(0x55);        //发送帧头
 107   1                      
 108   1                      UART_SendPacked_S(0x09);        //数据包个数
 109   1                      
 110   1                      UART_SendPacked_D(0x10);        //0x10指令
 111   1                      
 112   1                      Input_position(X1,Y1);
 113   1                      
 114   1                      Input_position(X2,Y2);
 115   1                      
 116   1                      UART_SendPacked_S(Send_Check);//包中有效数据的校验和    
 117   1      
C51 COMPILER V9.00   PHOTO                                                                 06/13/2013 19:58:54 PAGE 3   

 118   1                      UART_SendPacked_S(0xAA);
 119   1      
 120   1      }
 121          
 122          
 123                  void  autoroll (unsigned char time,unsigned char step,
 124                                                  unsigned char direction,unsigned char reverse)
 125                  {
 126   1                      
 127   1                      Send_Check = 0;                         //将校验值先清零
 128   1                      
 129   1                      UART_SendPacked_S(0x55);        //发送帧头
 130   1                      
 131   1                      UART_SendPacked_S(0x05);        //数据包个数
 132   1                                      
 133   1                      UART_SendPacked_D(0x13);        //0x13指令
 134   1                      
 135   1                      UART_SendPacked_D(time);
 136   1                      
 137   1                      UART_SendPacked_D(step);
 138   1                      
 139   1                      UART_SendPacked_D(direction);
 140   1      
 141   1                      UART_SendPacked_D(reverse);
 142   1                      
 143   1                      UART_SendPacked_S(Send_Check);//包中有效数据的校验和
 144   1              
 145   1                      UART_SendPacked_S(0xAA);
 146   1              }
 147          
 148          
 149          void endautoroll(unsigned char mode)
 150          {
 151   1                      Send_Check = 0;                         //将校验值先清零
 152   1                      
 153   1                      UART_SendPacked_S(0x55);        //发送帧头
 154   1                      
 155   1                      UART_SendPacked_S(0x02);        //数据包个数
 156   1                                      
 157   1                      UART_SendPacked_D(0x14);        //0x14指令
 158   1                      
 159   1                      UART_SendPacked_D(mode);
 160   1      
 161   1                      UART_SendPacked_S(Send_Check);
 162   1                      
 163   1                      UART_SendPacked_S(0xAA);
 164   1      
 165   1      
 166   1      }
 167          
 168          
 169          /*void roll_horizontal(unsigned int num)        
 170          //水平手动滚动
 171          {
 172                          Send_Check = 0;                         //将校验值先清零
 173                          
 174                          UART_SendPacked_S(0x55);        //发送帧头
 175                          
 176                          UART_SendPacked_S(0x03);        //数据包个数
 177                                          
 178                          UART_SendPacked_D(0x11);        //0x11指令
 179                          
C51 COMPILER V9.00   PHOTO                                                                 06/13/2013 19:58:54 PAGE 4   

 180                          Input_data(num);
 181                          
 182                          UART_SendPacked_S(Send_Check);//包中有效数据的校验和
 183          
 184                          UART_SendPacked_S(0xAA);
 185          
 186          } */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    552    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
